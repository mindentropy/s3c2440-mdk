#ifndef USB_H_

#define USB_H_

#include <stdint.h>

#define REQ_TYPE_CLEAR_FEATURE1  	0x0
#define REQ_TYPE_CLEAR_FEATURE2  	0x1
#define REQ_TYPE_CLEAR_FEATURE3  	0x2

#define REQ_TYPE_GET_CONFIGURATION  0x80
#define REQ_TYPE_GET_DESCRIPTOR 	0x80

#define REQ_TYPE_GET_INTERFACE 		0x81

#define REQ_TYPE_GET_STATUS1 		0x80
#define REQ_TYPE_GET_STATUS2 		0x81
#define REQ_TYPE_GET_STATUS3 		0x82

#define REQ_TYPE_SET_ADDRESS 		0x0
#define REQ_TYPE_SET_CONFIGURATION  0x0

#define REQ_TYPE_SET_DESCRIPTOR 	0x0

#define REQ_TYPE_SET_FEATURE1 		0x0
#define REQ_TYPE_SET_FEATURE2 		0x1
#define REQ_TYPE_SET_FEATURE3 		0x2

#define REQ_TYPE_SET_INTERFACE 		0x1
#define REQ_TYPE_SYNCH_FRAME 		0x82



struct __attribute__((packed)) usb_setup
{
	uint8_t bmRequestType;
	uint8_t bRequest;
	uint16_t wValue;
	uint16_t wIndex;
	uint16_t wLength;
};

enum Request {
	REQ_GET_STATUS = 0,
	REQ_CLEAR_FEATURE,
	REQ_RESERVED1,
	REQ_SET_FEATURE,
	REQ_RESERVED2,
	REQ_SET_ADDRESS,
	REQ_GET_DESCRIPTOR,
	REQ_SET_DESCRIPTOR,
	REQ_GET_CONFIGURATION,
	REQ_SET_CONFIGURATION,
	REQ_GET_INTERFACE,
	REQ_SET_INTERFACE,
	REQ_SYNCH_FRAME
};

enum DescriptorType {
	DESC_DEVICE = 1,
	DESC_CONFIGURATION,
	DESC_STRING,
	DESC_INTERFACE,
	DESC_ENDPOINT
};

#define SELECTOR_DEVICE_REMOTE_WAKEUP 	1
#define SELECTOR_ENDPOINT_HALT 			0

#endif
